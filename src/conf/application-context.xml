<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd  http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
 
	<context:annotation-config />
	<!-- <task:annotation-driven /> -->
	<context:component-scan base-package="com.saama" />
	<!-- AOP annotation -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<context:property-placeholder location="classpath:conf/conf.properties" />
	
	<!-- <bean id="log4jInitialization" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"> 
		<property name="targetClass" value="org.springframework.util.Log4jConfigurer" 
		/> <property name="targetMethod" value="initLogging" /> <property name="arguments"> 
		<list> <value>classpath:/logging/log4j.properties</value> <value>1000</value> 
		</list> </property> </bean> -->

	<!-- <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"> 
		<property name="paramName" value="lang" /> </bean> -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:/properties/messages" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<bean 	id="dataSource" 
			class="com.org.util.CustomBasicDataSource"
			destroy-method="close" 
			p:driverClassName="${${deployed.env}.hibernate.connection.driver_class}"
			p:url="${${deployed.env}.hibernate.connection.url}" 
			p:username="${${deployed.env}.hibernate.connection.username}"
			p:password="${${deployed.env}.hibernate.connection.password}" />


	<bean 	id="sessionFactory"
			class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
			<property name="packagesToScan" value="com.org.model"/> 
			<property name="dataSource" ref="dataSource" />
			<!-- <property name="configLocation" value="classpath:/conf/hibernate.cfg.xml" /> -->
			<property name="hibernateProperties">
				<props>
					<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
					 <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
					<!-- <prop key="hibernate.enable_lazy_load_no_trans">true</prop> -->
					<prop key="hibernate.show_sql">true</prop>
					<prop key="hibernate.jdbc.batch_size">100</prop>
					<prop key="hibernate.connection.pool_size">10</prop>
					<prop key="hibernate.c3p0.min_size">10</prop>
					<prop key="hibernate.c3p0.max_size">20</prop>
					<prop key="hibernate.c3p0.timeout">5000</prop>
					<prop key="hibernate.c3p0.max_statements">50</prop>
					<prop key="hibernate.c3p0.idle_test_period">3000</prop>
					<prop key="hibernate.c3p0.acquire_increment">1</prop>
					<prop key="hibernate.order_inserts">true</prop>
					<prop key="hibernate.order_updates">true</prop>
					<prop key="hibernate.cache.use_second_level_cache">true</prop>
					<prop key="hibernate.cache.use_query_cache">false</prop>
					<prop key="hibernate.c3p0.validate">true</prop>
					<prop key="hibernate.c3p0.preferredTestQuery">select 1</prop>
					<!-- <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop> -->
					<!-- <prop key="hibernate.enable_lazy_load_no_trans">true</prop> -->
					<!-- <prop key="hibernate.cache.provider_configuration_file_resource_path">classpath:/conf/${env.config}/appCache.xml</prop> -->
					<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
				</props>
			</property>
	</bean>
	
	<bean 	id="transactionManager"
			class="org.springframework.orm.hibernate4.HibernateTransactionManager"
			p:sessionFactory-ref="sessionFactory" />
	
	<!-- <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
       <property name="host" value="${mail.smtp.host}"/>
       <property name="port" value="${mail.smtp.port}"/>
       <property name="username" value="${mail.smtp.username}"/>
       <property name="password" value="${mail.smtp.password}"/>
       <property name="javaMailProperties">
           <props>
               <prop key="mail.transport.protocol">${mail.transport.protocol}</prop>
               <prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
               <prop key="mail.smtp.starttls.enable">${mail.smtp.starttls.enable}</prop>
               <prop key="mail.smtp.from">${mail.smtp.from}</prop>
               <prop key="mail.debug">${mail.smtp.debug}</prop>
           </props>
       </property>
   </bean>
    
    <bean id="emailNotificationService" class="com.saama.vividsense.web.notification.EmailNotificationService">
		<property name="mailSender" ref="mailSender" />
		<property name="simpleMailMessage" ref="customeMailMessage" />
	</bean> -->
	<tx:annotation-driven />

	<!-- <mvc:interceptors> <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" 
		p:paramName="locale" /> </mvc:interceptors> -->

</beans>
